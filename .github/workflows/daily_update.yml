name: 每日数据更新

on:
  schedule:
    # 北京时间晚上8点 (UTC+8)，对应 UTC 时间 12:00
    - cron: '0 12 * * *'
  workflow_dispatch:  # 允许手动触发

jobs:
  update-data:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 确保有写入权限
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录
      
      - name: 设置 Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      
      - name: 确保目录结构存在
        run: |
          mkdir -p data/active/current
          mkdir -p data/active/previous
          mkdir -p data/archived
          mkdir -p docs/data
      
      - name: 运行日常数据更新
        run: |
          # 检查是否首次运行
          if [ -f "data/active/current/metadata.txt" ]; then
            echo "执行日常更新模式..."
            python daily_calendar.py --daily --export
          else
            echo "执行首次运行模式..."
            python daily_calendar.py --first-run --export
          fi
      
      - name: 配置 Git
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
      
      - name: 提交更新的数据
        run: |
          # 添加所有更改
          git add docs/data/
          git add data/
          
          # 检查是否有变更
          if git diff --staged --quiet; then
            echo "没有数据变更，跳过提交"
          else
            git commit -m "自动更新数据: $(date +'%Y-%m-%d')"
            git push
          fi
